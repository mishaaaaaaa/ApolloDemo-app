{"ast":null,"code":"import { withStyles } from '@material-ui/core/styles';\nimport { compose } from 'recompose';\nimport { graphql } from 'react-apollo';\nimport { addMovieMutation } from \"./mutations\";\nimport { moviesQuery } from \"../MoviesTable/queries\";\nimport { directorsQuery } from './queries';\nimport { styles } from './styles';\nconst withGraphqlAdd = graphql(addMovieMutation, {\n  props: ({\n    mutate\n  }) => ({\n    addMovie: movie => mutate({\n      variables: movie,\n      refetchQueries: [{\n        query: moviesQuery\n      }]\n    })\n  })\n});\nexport default compose(withStyles(styles), withGraphqlAdd, graphql(directorsQuery));","map":{"version":3,"sources":["D:/webmasters/react_2_0/ApolloDemo-master/ApolloDemo-master/application/src/components/MoviesForm/MoviesFormHoc.js"],"names":["withStyles","compose","graphql","addMovieMutation","moviesQuery","directorsQuery","styles","withGraphqlAdd","props","mutate","addMovie","movie","variables","refetchQueries","query"],"mappings":"AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,cAAc,GAAGL,OAAO,CAACC,gBAAD,EAAmB;AAC7CK,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,MAAiB;AACpBC,IAAAA,QAAQ,EAAEC,KAAK,IAAIF,MAAM,CAAC;AACtBG,MAAAA,SAAS,EAAED,KADW;AAEtBE,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAD;AAFM,KAAD;AADL,GAAjB;AADsC,CAAnB,CAA9B;AASA,eAAeH,OAAO,CAACD,UAAU,CAACM,MAAD,CAAX,EAAqBC,cAArB,EAAqCL,OAAO,CAACG,cAAD,CAA5C,CAAtB","sourcesContent":["import { withStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'recompose';\r\nimport { graphql } from 'react-apollo'\r\n\r\nimport { addMovieMutation } from \"./mutations\";\r\nimport { moviesQuery } from \"../MoviesTable/queries\";\r\nimport { directorsQuery } from './queries'\r\n\r\nimport { styles } from './styles';\r\n\r\nconst withGraphqlAdd = graphql(addMovieMutation, {\r\n    props: ({ mutate }) => ({\r\n        addMovie: movie => mutate({\r\n            variables: movie,\r\n            refetchQueries: [{ query: moviesQuery }]\r\n        })\r\n    })\r\n})\r\n\r\nexport default compose(withStyles(styles), withGraphqlAdd, graphql(directorsQuery));\r\n"]},"metadata":{},"sourceType":"module"}