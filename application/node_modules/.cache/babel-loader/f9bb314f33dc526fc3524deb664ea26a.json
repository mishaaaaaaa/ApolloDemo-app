{"ast":null,"code":"var _jsxFileName = \"D:\\\\webmasters\\\\react_2_0\\\\ApolloDemo-master\\\\ApolloDemo-master\\\\application\\\\src\\\\components\\\\MoviesForm\\\\MoviesForm.jsx\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport SaveIcon from '@material-ui/icons/Save';\nimport withHocs from './MoviesFormHoc'; // const directors = [\n//   { id: 1, name: 'Quentin Tarantino', age: 55, movies: [ { name: 'Movie 1' }, { name: 'Movie 2' } ] },\n//   { id: 2, name: 'Guy Ritchie', age: 50, movies: [ { name: 'Movie 1' }, { name: 'Movie 2' } ] }\n// ];\n\nclass MoviesForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onClose();\n    };\n\n    this.handleSave = () => {\n      const {\n        selectedValue,\n        onClose,\n        addMovie\n      } = this.props;\n      const {\n        id,\n        name,\n        genre,\n        rate,\n        directorId,\n        watched\n      } = selectedValue;\n      onClose();\n      addMovie({\n        name,\n        genre,\n        watched: Boolean(watched),\n        rate: Number(rate),\n        directorId\n      });\n    };\n  }\n\n  render() {\n    const {\n      data = {},\n      classes,\n      open,\n      handleChange,\n      handleSelectChange,\n      handleCheckboxChange,\n      selectedValue = {}\n    } = this.props;\n    const {\n      name,\n      genre,\n      rate,\n      directorId,\n      watched\n    } = selectedValue;\n    const {\n      directors = []\n    } = data;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      onClose: this.handleClose,\n      open: open,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      className: classes.title,\n      id: \"simple-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Movie information\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"Name\",\n      className: classes.textField,\n      value: name,\n      onChange: handleChange('name'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-genre\",\n      label: \"Genre\",\n      className: classes.textField,\n      value: genre,\n      onChange: handleChange('genre'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-rate\",\n      label: \"Rate\",\n      value: rate,\n      onChange: handleChange('rate'),\n      type: \"number\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControlSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      ref: ref => {\n        this.InputLabelRef = ref;\n      },\n      htmlFor: \"outlined-age-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Director\"), /*#__PURE__*/React.createElement(Select, {\n      value: directorId,\n      onChange: handleSelectChange,\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        name: \"directorId\",\n        id: \"outlined-director\",\n        labelWidth: 57,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, directors.map(director => /*#__PURE__*/React.createElement(MenuItem, {\n      key: director.id,\n      value: director.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 40\n      }\n    }, director.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: watched,\n        onChange: handleCheckboxChange('watched'),\n        value: \"watched\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }\n      }),\n      label: \"Watched movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSave,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), \" Save\"))));\n  }\n\n}\n\n;\nexport default withHocs(MoviesForm);","map":{"version":3,"sources":["D:/webmasters/react_2_0/ApolloDemo-master/ApolloDemo-master/application/src/components/MoviesForm/MoviesForm.jsx"],"names":["React","TextField","OutlinedInput","MenuItem","Select","Checkbox","FormControl","FormControlLabel","InputLabel","Button","DialogTitle","Dialog","SaveIcon","withHocs","MoviesForm","Component","handleClose","props","onClose","handleSave","selectedValue","addMovie","id","name","genre","rate","directorId","watched","Boolean","Number","render","data","classes","open","handleChange","handleSelectChange","handleCheckboxChange","directors","title","container","textField","formControlSelect","ref","InputLabelRef","map","director","wrapper","button"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport withHocs from './MoviesFormHoc';\r\n\r\n// const directors = [\r\n//   { id: 1, name: 'Quentin Tarantino', age: 55, movies: [ { name: 'Movie 1' }, { name: 'Movie 2' } ] },\r\n//   { id: 2, name: 'Guy Ritchie', age: 50, movies: [ { name: 'Movie 1' }, { name: 'Movie 2' } ] }\r\n// ];\r\n\r\nclass MoviesForm extends React.Component {\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { selectedValue, onClose, addMovie } = this.props;\r\n    const { id, name, genre, rate, directorId, watched } = selectedValue;\r\n\r\n    onClose();\r\n\r\n    addMovie({name, genre, watched: Boolean(watched), rate: Number(rate), directorId})\r\n  };\r\n\r\n  render() {\r\n    const { data = {}, classes, open, handleChange, handleSelectChange, handleCheckboxChange, selectedValue = {} } = this.props;\r\n    const { name, genre, rate, directorId, watched } = selectedValue;\r\n\r\n    const { directors = [] } = data\r\n\r\n    return (\r\n      <Dialog onClose={this.handleClose} open={open} aria-labelledby=\"simple-dialog-title\">\r\n        <DialogTitle className={classes.title} id=\"simple-dialog-title\">Movie information</DialogTitle>\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"outlined-name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={name}\r\n            onChange={handleChange('name')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"outlined-genre\"\r\n            label=\"Genre\"\r\n            className={classes.textField}\r\n            value={genre}\r\n            onChange={handleChange('genre')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"outlined-rate\"\r\n            label=\"Rate\"\r\n            value={rate}\r\n            onChange={handleChange('rate')}\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <FormControl variant=\"outlined\" className={classes.formControlSelect}>\r\n            <InputLabel\r\n              ref={ref => { this.InputLabelRef = ref; }}\r\n              htmlFor=\"outlined-age-simple\"\r\n            >\r\n              Director\r\n            </InputLabel>\r\n            <Select\r\n              value={directorId}\r\n              onChange={handleSelectChange}\r\n              input={<OutlinedInput name=\"directorId\" id=\"outlined-director\" labelWidth={57} />}\r\n            >\r\n            {directors.map(director => <MenuItem key={director.id} value={director.id}>{director.name}</MenuItem>)}\r\n            </Select>\r\n          </FormControl>\r\n          <div className={classes.wrapper}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={watched} onChange={handleCheckboxChange('watched')} value=\"watched\" />}\r\n              label=\"Watched movie\"\r\n            />\r\n            <Button onClick={this.handleSave} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              <SaveIcon /> Save\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  }\r\n};\r\n\r\n  export default withHocs(MoviesForm);\r\n"]},"metadata":{},"sourceType":"module"}